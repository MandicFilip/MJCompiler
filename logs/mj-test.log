INFO  23:37:45,094 - Compiling source file: C:\IV godina\PP1\workspace\MJCompiler\test\syntax tests\test20.mj
INFO  23:37:45,188 - #2 program
INFO  23:37:45,188 - #40 P
INFO  23:37:45,188 - #8 const
INFO  23:37:45,188 - #40 int
INFO  23:37:45,188 - #40 size
INFO  23:37:45,188 - #28 =
INFO  23:37:45,188 - #42 10
INFO  23:37:45,188 - #31 ;
INFO  23:37:45,188 - #4 enum
INFO  23:37:45,188 - #40 Num
INFO  23:37:45,188 - #34 {
INFO  23:37:45,188 - #40 ZERO
INFO  23:37:45,188 - #32 ,
INFO  23:37:45,188 - #40 ONE
INFO  23:37:45,188 - #32 ,
INFO  23:37:45,188 - #40 TEN
INFO  23:37:45,188 - #28 =
INFO  23:37:45,188 - #42 10
INFO  23:37:45,188 - #35 }
INFO  23:37:45,188 - #40 int
INFO  23:37:45,188 - #40 var1
INFO  23:37:45,188 - #32 ,
INFO  23:37:45,188 - #40 var2
INFO  23:37:45,188 - #36 [
INFO  23:37:45,188 - #37 ]
INFO  23:37:45,188 - #31 ;
INFO  23:37:45,188 - #34 {
INFO  23:37:45,188 - #9 void
INFO  23:37:45,188 - #40 f
INFO  23:37:45,204 - #38 (
INFO  23:37:45,204 - #40 char
INFO  23:37:45,204 - #40 ch
INFO  23:37:45,204 - #32 ,
INFO  23:37:45,204 - #40 int
INFO  23:37:45,204 - #40 a
INFO  23:37:45,204 - #32 ,
INFO  23:37:45,204 - #40 int
INFO  23:37:45,204 - #40 arg
INFO  23:37:45,204 - #39 )
INFO  23:37:45,204 - #40 int
INFO  23:37:45,204 - #40 x
INFO  23:37:45,204 - #31 ;
INFO  23:37:45,204 - #34 {
INFO  23:37:45,204 - #40 x
INFO  23:37:45,204 - #28 =
INFO  23:37:45,204 - #40 arg
INFO  23:37:45,204 - #31 ;
INFO  23:37:45,204 - #35 }
INFO  23:37:45,204 - #40 int
INFO  23:37:45,204 - #40 retf
INFO  23:37:45,204 - #38 (
INFO  23:37:45,204 - #40 int
INFO  23:37:45,204 - #40 a
INFO  23:37:45,204 - #39 )
INFO  23:37:45,204 - #34 {
INFO  23:37:45,204 - #6 print
INFO  23:37:45,204 - #38 (
INFO  23:37:45,204 - #40 a
INFO  23:37:45,204 - #15 +
INFO  23:37:45,204 - #42 2
INFO  23:37:45,204 - #32 ,
INFO  23:37:45,204 - #42 10
INFO  23:37:45,204 - #32 ,
INFO  23:37:45,204 - #42 20
INFO  23:37:45,204 - #39 )
INFO  23:37:45,204 - #31 ;
INFO  23:37:45,204 - #5 return
INFO  23:37:45,204 - #40 a
INFO  23:37:45,204 - #15 +
INFO  23:37:45,204 - #42 2
INFO  23:37:45,204 - #31 ;
INFO  23:37:45,204 - #35 }
INFO  23:37:45,204 - #9 void
INFO  23:37:45,204 - #40 main
INFO  23:37:45,204 - #38 (
INFO  23:37:45,204 - #39 )
INFO  23:37:45,204 - #40 int
INFO  23:37:45,204 - #40 x
INFO  23:37:45,204 - #32 ,
INFO  23:37:45,204 - #40 i
INFO  23:37:45,204 - #31 ;
INFO  23:37:45,204 - #40 char
INFO  23:37:45,204 - #40 c
INFO  23:37:45,204 - #31 ;
INFO  23:37:45,204 - #34 {
INFO  23:37:45,204 - #12 for
INFO  23:37:45,204 - #38 (
INFO  23:37:45,204 - #40 i
INFO  23:37:45,204 - #28 =
INFO  23:37:45,204 - #42 0
INFO  23:37:45,204 - #31 ;
INFO  23:37:45,204 - #40 i
INFO  23:37:45,204 - #24 <
INFO  23:37:45,204 - #40 size
INFO  23:37:45,204 - #31 ;
INFO  23:37:45,219 - #40 i
INFO  23:37:45,219 - #29 ++
INFO  23:37:45,219 - #39 )
INFO  23:37:45,219 - #34 {
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #28 =
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #15 +
INFO  23:37:45,219 - #42 1
INFO  23:37:45,219 - #31 ;
INFO  23:37:45,219 - #14 continue
INFO  23:37:45,219 - #31 ;
INFO  23:37:45,219 - #35 }
INFO  23:37:45,219 - #40 f
INFO  23:37:45,219 - #38 (
INFO  23:37:45,219 - #40 c
INFO  23:37:45,219 - #32 ,
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #32 ,
INFO  23:37:45,219 - #40 i
INFO  23:37:45,219 - #39 )
INFO  23:37:45,219 - #31 ;
INFO  23:37:45,219 - #7 read
INFO  23:37:45,219 - #38 (
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #39 )
INFO  23:37:45,219 - #31 ;
INFO  23:37:45,219 - #12 for
INFO  23:37:45,219 - #38 (
INFO  23:37:45,219 - #31 ;
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #22 >
INFO  23:37:45,219 - #42 0
INFO  23:37:45,219 - #31 ;
INFO  23:37:45,219 - #39 )
INFO  23:37:45,219 - #34 {
INFO  23:37:45,219 - #10 if
INFO  23:37:45,219 - #38 (
INFO  23:37:45,219 - #40 Num
INFO  23:37:45,219 - #33 .
INFO  23:37:45,219 - #40 ZERO
INFO  23:37:45,219 - #25 <=
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #26 &&
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #24 <
INFO  23:37:45,219 - #40 size
INFO  23:37:45,219 - #39 )
INFO  23:37:45,219 - #34 {
INFO  23:37:45,219 - #35 }
INFO  23:37:45,219 - #11 else
INFO  23:37:45,219 - #10 if
INFO  23:37:45,219 - #38 (
INFO  23:37:45,219 - #16 -
INFO  23:37:45,219 - #40 size
INFO  23:37:45,219 - #24 <
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #27 ||
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #24 <
INFO  23:37:45,219 - #42 0
INFO  23:37:45,219 - #26 &&
INFO  23:37:45,219 - #40 x
INFO  23:37:45,219 - #22 >
INFO  23:37:45,219 - #42 50
INFO  23:37:45,219 - #39 )
INFO  23:37:45,219 - #34 {
INFO  23:37:45,219 - #6 print
INFO  23:37:45,219 - #38 (
INFO  23:37:45,219 - #40 c
INFO  23:37:45,219 - #39 )
INFO  23:37:45,219 - #31 ;
INFO  23:37:45,219 - #13 break
INFO  23:37:45,219 - #31 ;
INFO  23:37:45,219 - #35 }
INFO  23:37:45,235 - #7 read
INFO  23:37:45,235 - #38 (
INFO  23:37:45,235 - #40 x
INFO  23:37:45,235 - #39 )
INFO  23:37:45,235 - #31 ;
INFO  23:37:45,235 - #35 }
INFO  23:37:45,235 - #35 }
INFO  23:37:45,235 - #35 }
INFO  23:37:45,235 - rs.ac.bg.etf.pp1.ast.Program@117ae12
